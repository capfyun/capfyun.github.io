{"code":200,"data":[{"composeCount":2,"examSessionName":"1704","code":"2018042002035","questionId":199329,"viceNodeSerialNumber1":"6.2.1","examSession":3,"content":"<p>定义一个生日类，数据成员有年、月、日。定义一个人员类，数据成员有姓名、性别、生日。人员类中的生日类的对象，两个类都有构造函数和显示函数。在主函数中声明一个人员类对象，屏幕显示其数据。<br></p>","operator":"xiaotianyang","deleteFlag":0,"examProvince":35,"score":10.0,"questionContentEssayScorePointList":[],"viceNodeId2":-1,"id":578975,"outlineRequirement":"无","correctAnswer":"<p>#include &lt;iostream&gt;</p><p>using namespace std;</p><p>class birth{</p><p>private:</p><p>&nbsp;&nbsp; int year,month,day;</p><p>public:</p><p>&nbsp;&nbsp; birth(int x,int y,int z){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; year=x;month=y;day=z;</p><p>&nbsp; }</p><p>&nbsp; void show( ){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;\"生日是\"&lt;&lt;year&lt;&lt;\"年\"&lt;&lt;month&lt;&lt;\"月\"&lt;&lt;day&lt;&lt;\"日\"&lt;&lt;endl;</p><p>&nbsp;&nbsp; }</p><p>};</p><p>class person{</p><p>private:</p><p>&nbsp;&nbsp;&nbsp; char *name;</p><p>&nbsp;&nbsp;&nbsp; char *sex;</p><p>&nbsp;&nbsp;&nbsp; birth birdy;</p><p>public:<br></p><p>&nbsp;&nbsp;&nbsp;&nbsp; person(char *p,char *q,int x,int y,int z);</p><p>&nbsp;&nbsp;&nbsp;&nbsp; void show( ){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;\"姓名为\"&lt;&lt;name&lt;&lt;\"性别为\"&lt;&lt;sex;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; birdy.show( );</p><p>&nbsp;&nbsp;&nbsp;&nbsp; }</p><p>};</p><p>person::person(char *p,char *q,int x,int y,int z):birdy(x,y,z){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name=p;sex=q;</p><p>}</p><p>void main( )</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; person&nbsp; prsn(\"张三\"，\"男\"，2000,4,28);</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prsn.show( );</p><p>}<br></p>","mainNodeName":"声明类","contentType":"ESSAY","creator":"xiaotianyang","analysisUseless":0,"mainNodeSerialNumber":"4.1.1.1","viceNodeName1":"一、单一继承的一般形式","knowledgeTreeId":533,"viceNodeId1":225780,"invalidFlag":0,"updateTime":1524212072000,"analysis":"<p>根据题目要求定义生日类，人员类，并定义其构造方法，创建对象，显示数据。<br></p>","difficultyValue":4,"currentVersion":1,"sequence":1,"createTime":1524212072000,"sourceType":"REAL_QUESTION","mainNodeId":225848,"questionType":"ESSAY","difficultyType":0,"examProvinceName":"全国","analysisUseful":0,"parentQuestionId":0},{"composeCount":1,"examSessionName":"1610","code":"2018030800006","questionId":399817,"viceNodeSerialNumber1":"6.2.2","examSession":5,"content":"<p>有一个Person类，私有数据成员name、age和sex分别表示人的姓名、年龄和性别。雇员类Employee是Person的派生类，新增数据成员部门department和薪水<span style=\"font-size: 14px;\">salary</span><span style=\"font-size: 14px;\">。请用C++代码描述这两个类，并用Employee类的成员函数Display实现雇员的姓名、年龄、性别、部门和薪水的输出。(要求编写派生类的构造函数)</span></p>","operator":"yanjiaqi","deleteFlag":0,"examProvince":35,"score":10.0,"questionContentEssayScorePointList":[],"viceNodeId2":-1,"id":1285476,"outlineRequirement":"无","correctAnswer":"<p>#include&lt;iostream&gt;</p><p>using namespace std;</p><p>class Person</p><p>{public：</p><p>Person（char *s1=\"\",int a=0,char *s2=\"\"）</p><p>{strcpy（name，s1）;age=a;strcpy（sex，s2）;<span style=\"font-size: 14px;\">}</span></p><p>protected：</p><p>char name[8]；</p><p>int age；</p><p>char sex[2]；</p><p>}；</p><p>class Employee：public Person</p><p>{public：</p><p>Employee（char *s1=“”，int a=0，char&nbsp; *s2=“”，char *s3=“”，double s=0.<span style=\"font-size: 14px;\">0）：Person（s1，a，s2）</span></p><p>}strcpy(department，s3)；</p><p>salary =s；</p><p>}</p><p>void Display（）</p><p>{cout&lt;&lt;name&lt;&lt;\" \"&lt;&lt;age&lt;&lt;\" \"&lt;&lt;sex&lt;&lt;\" \"&lt;&lt;department&lt;&lt;\" \"&lt;&lt;salary&lt;&lt;endl；}</p><p>private：</p><p>char department[20]；</p><p>double salary；</p><p>}；</p><p>void main（）</p><p>{Employee ee(“张三”，18，“男”，“计算机”，2180.8）；</p><p>ee.Display（）；<br></p><p>}<br></p>","mainNodeName":"声明类","contentType":"ESSAY","creator":"yanjiaqi","analysisUseless":0,"mainNodeSerialNumber":"4.1.1.1","viceNodeName1":"二、派生类的构造函数和析构函数","knowledgeTreeId":533,"viceNodeId1":225781,"invalidFlag":0,"updateTime":1543211683000,"analysis":"<p>定义派生类的构造函数的一般形式为：</p><p>派生类名：：派生类名（参数表0）：基类名（参数表）</p><p>{.....//函数体}<br></p>","difficultyValue":4,"currentVersion":1,"sequence":1,"createTime":1543211683000,"sourceType":"REAL_QUESTION","mainNodeId":225848,"questionType":"ESSAY","difficultyType":0,"examProvinceName":"全国","analysisUseful":0,"parentQuestionId":0},{"composeCount":2,"examSessionName":"1810","code":"2018111600952","questionId":392391,"viceNodeSerialNumber2":"6.5.4","viceNodeSerialNumber1":"4.2.2.1","examSession":125,"content":"<p><img src=\"http://store.sunlands.com/qiyejia/original/20181116/1063361233976692736.png\" alt=\"\" width=\"497\" height=\"272\"><br></p>","operator":"zhangrui01","deleteFlag":0,"examProvince":35,"score":10.0,"questionContentEssayScorePointList":[],"viceNodeId2":225789,"id":1258351,"outlineRequirement":"无","correctAnswer":"<p><img src=\"http://store.sunlands.com/qiyejia/original/20181116/1063361723047739392.png\" alt=\"\" width=\"288\" height=\"537\"><br></p>","mainNodeName":"声明类","contentType":"ESSAY","creator":"zhangrui01","analysisUseless":0,"mainNodeSerialNumber":"4.1.1.1","viceNodeName1":"构造函数的定义和使用方法","knowledgeTreeId":533,"viceNodeId1":225851,"invalidFlag":0,"updateTime":1542361922000,"analysis":"<p><img src=\"http://store.sunlands.com/qiyejia/original/20181116/1063361756549222400.png\" alt=\"\" width=\"288\" height=\"537\"><br></p>","difficultyValue":3,"currentVersion":1,"sequence":1,"createTime":1542361922000,"sourceType":"REAL_QUESTION","mainNodeId":225848,"viceNodeName2":"四、友元和派生类","questionType":"ESSAY","difficultyType":0,"examProvinceName":"全国","analysisUseful":0,"parentQuestionId":0},{"composeCount":3,"examSessionName":"1510","code":"2018061304095","questionId":268027,"examSession":9,"content":"<p>写一个程序，定义一个抽象类Shape，由它派生3个类：Square(正方形)、Trapezoid(梯形)和Triangle(三角形)。用虚函数分别计算几种图形面积、并求它们的和。要求用基类指针数组，使它每一个元素指向一个派生类对象。</p><p><img src=\"http://store.sunlands.com/qiyejia/original/20180316/1521171724771.png\" alt=\"\" width=\"280\" height=\"182\"></p>","operator":"dongwenjun","deleteFlag":0,"examProvince":35,"score":10.0,"questionContentEssayScorePointList":[],"viceNodeId2":-1,"id":805245,"outlineRequirement":"无","correctAnswer":"<p>class Square:public Shape</p><p>{</p><p>public:</p><p>&nbsp;&nbsp;&nbsp; Square(double s)：side(s){ }</p><p>&nbsp;&nbsp;&nbsp; double area( )const{return side *side;}</p><p>private:</p><p>&nbsp;&nbsp;&nbsp; double side;</p><p>};</p><p>class Trapezoid:public Shape</p><p>{</p><p>public:</p><p>&nbsp;&nbsp;&nbsp; Trapezoid(double i,double j,double k):a(i),b(j),h(k)</p><p>&nbsp;&nbsp;&nbsp;&nbsp; { }</p><p>&nbsp;&nbsp;&nbsp;&nbsp; double area( )const{ return((a+b)*h/2);}</p><p>private:</p><p>&nbsp;&nbsp;&nbsp;&nbsp; double a,b,h;</p><p>};</p><p>class Triangle:public Shape</p><p>{</p><p>public:</p><p>&nbsp;&nbsp; Triangle(double i,double j):w(i),h(j)</p><p>&nbsp;&nbsp;&nbsp; { }</p><p>&nbsp;&nbsp; double area( )const{return(w*h/2);}</p><p>private:</p><p>&nbsp;&nbsp;&nbsp; double w,h;</p><p>};</p><p>void main( )</p><p>{</p><p>&nbsp; Shape *p[5];</p><p>&nbsp; Square se(5);</p><p>&nbsp; Trapezoid td(2,5,4);</p><p>&nbsp; Triangle te(5,8);</p><p>&nbsp; p[0]=&amp;se;</p><p>&nbsp; p[1]=&amp;td;</p><p>&nbsp; p[2]=&amp;te;</p><p>&nbsp; double da=0;</p><p>&nbsp; for(int i=0;i&lt;3;i++)</p><p>&nbsp; {da+=p[i]-&gt;area();}</p><p>&nbsp; cout&lt;&lt;\"总面积是：\"&lt;&lt;da&lt;&lt;endl;</p>","mainNodeName":"一、单一继承的一般形式","contentType":"ESSAY","creator":"dongwenjun","analysisUseless":0,"mainNodeSerialNumber":"6.2.1","knowledgeTreeId":533,"viceNodeId1":-1,"invalidFlag":0,"updateTime":1528964261000,"analysis":"<p>class Square:public Shape\n<br>{\n<br>public:\n<br>    Square(double s)：side(s){ }\n<br>    double area( )const{return side *side;}\n<br>private:\n<br>    double side;\n<br>};\n<br>class Trapezoid:public Shape\n<br>{\n<br>public:\n<br>    Trapezoid(double i,double j,double k):a(i),b(j),h(k)\n<br>     { }\n<br>     double area( )const{ return((a+b)*h/2);}\n<br>private:\n<br>     double a,b,h;\n<br>};\n<br>class Triangle:public Shape\n<br>{\n<br>public:\n<br>   Triangle(double i,double j):w(i),h(j)\n<br>    { }\n<br>   double area( )const{return(w*h/2);}\n<br>private:\n<br>    double w,h;\n<br>};\n<br>void main( )\n<br>{\n<br>  Shape *p[5];\n<br>  Square se(5);\n<br>  Trapezoid td(2,5,4);\n<br>  Triangle te(5,8);\n<br>  p[0]=&amp;se;\n<br>  p[1]=&amp;td;\n<br>  p[2]=&amp;te;\n<br>  double da=0;\n<br>  for(int i=0;i&lt;3;i++)\n<br>  {da+=p[i]-&gt;area();}\n<br>  cout&lt;&lt;\"总面积是：\"&lt;&lt;da&lt;&lt;endl;&nbsp;<br></p>","difficultyValue":4,"currentVersion":1,"sequence":1,"createTime":1528964261000,"sourceType":"REAL_QUESTION","mainNodeId":225780,"questionType":"ESSAY","difficultyType":0,"examProvinceName":"全国","analysisUseful":0,"parentQuestionId":0},{"composeCount":2,"examSessionName":"1604","code":"2018041803567","questionId":379653,"viceNodeSerialNumber1":"1.1.0","examSession":7,"content":"<p>定义一个图形类（figure），其中有保护类型的成员数据：高度（height）和宽度（width），一个公有的构造函数。由该图形类建立两个派生类:矩形类和等腰三角形类。在每个派生类中都包含一个函数area( ),分别用来计算矩形和等腰三角形的面积。其中，主函数已给出，请完成其他部分的代码。</p><p><img src=\"http://store.sunlands.com/qiyejia/original/20180313/1520932852612.png\" alt=\"\" width=\"349\" height=\"148\"></p>","operator":"dongwenjun","deleteFlag":0,"examProvince":35,"score":10.0,"questionContentEssayScorePointList":[],"viceNodeId2":-1,"id":1204502,"outlineRequirement":"无","correctAnswer":"<p>#include&lt;iostream&gt;</p><p>using namespace std;</p><p>class figure</p><p>{</p><p>protected:</p><p>&nbsp;&nbsp; double height,width;</p><p>public:</p><p>&nbsp; figure(double=0,double=0);<br></p><p>}</p><p>figure::figure(double h,double w)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp; height=h;</p><p>&nbsp;&nbsp;&nbsp;&nbsp; width=w;<br></p><p>}</p><p>class triangle:public figure</p><p>{</p><p>public:</p><p>&nbsp;&nbsp;&nbsp;&nbsp; double area( );</p><p>&nbsp;&nbsp;&nbsp;&nbsp; triangle(double=0,double=0);</p><p>};</p><p>triangle::triangle(double h,double w):figure(h,w)</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp; height=h;width=w;<br></p><p>}</p><p>double triangle::area( )</p><p>{</p><p>&nbsp;&nbsp;&nbsp;&nbsp; return 0.5*height*width;<br></p><p>}</p><p>class rectangle:public figure</p><p>{</p><p>public:</p><p>&nbsp;&nbsp;&nbsp; double area();</p><p>&nbsp;&nbsp;&nbsp; rectangle(double=0,double=0);</p><p>};</p><p>rectangle::rectangle(double h,double w):figure(h,w)</p><p>{</p><p>&nbsp;&nbsp;&nbsp; height=h;</p><p>&nbsp;&nbsp;&nbsp; width=w;</p><p>}</p><p>double rectangle::area()</p><p>{</p><p>&nbsp;&nbsp;&nbsp; return height*width;<br></p><p>}<br></p>","mainNodeName":"二、派生类的构造函数和析构函数","contentType":"ESSAY","creator":"dongwenjun","analysisUseless":0,"mainNodeSerialNumber":"6.2.2","viceNodeName1":"零、认识C++的函数和对象","knowledgeTreeId":533,"viceNodeId1":225922,"invalidFlag":0,"updateTime":1540260389000,"analysis":"根据题目要求，创建图形类。保护类型为protected。定义派生类的构造函数的一般形式为：<br>派生类名：：派生类名（参数表0）：基类名（参数表）<br>{...//函数体}<br><p><br></p>","difficultyValue":4,"currentVersion":1,"sequence":3,"createTime":1540260389000,"sourceType":"REAL_QUESTION","mainNodeId":225781,"questionType":"ESSAY","difficultyType":0,"examProvinceName":"全国","analysisUseful":0,"parentQuestionId":0}],"message":"SUCCESS"}